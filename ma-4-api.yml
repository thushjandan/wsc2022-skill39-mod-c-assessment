---
- name: MARKING - API
  hosts: localhost
  any_errors_fatal: false
  vars:
    ansible_become_password: "Incheon-2022"
  tasks:
    ## systemd service applix-api is running
    - name: "Retrieve applix-api status"
      shell: "systemctl status applix-api"
      register: api_systemd_status
      ignore_errors: true
      changed_when: false
      tags:
        - c4_1

    - name: "systemd service applix-api is running"
      debug:
        var: api_systemd_status.stdout
      tags:
        - c4_1

    - pause:
        prompt: "Please mark now aspect - systemd service applix-api is running"
      tags:
        - c4_1

    ## Endpoint GET /network/devices/stats
    - name: "Call GET /network/devices/stats"
      ansible.builtin.uri:
        url: "https://127.0.0.1/network/devices/stats"
        return_content: true
        validate_certs: false
        timeout: 300
      register: api_net_device_stats
      ignore_errors: true
      changed_when: false
      retries: 3
      delay: 2
      until: api_net_device_stats is succeeded
      tags:
        - c4_2

    - name: "Endpoint GET /network/devices/stats"
      debug:
        msg: "{{ api_net_device_stats.content | from_json | to_nice_json }}"
      ignore_errors: true
      tags:
        - c4_2

    - pause:
        prompt: "Please mark now aspect - Endpoint GET /network/devices/stats"
      tags:
        - c4_2

    ## Endpoint GET /network/devices/stats - filter by management IP
    - name: "Call GET /network/devices/stats?management_ip=10.22.0.204"
      ansible.builtin.uri:
        url: "https://127.0.0.1/network/devices/stats?management_ip=10.22.0.204"
        return_content: true
        validate_certs: false
        timeout: 300
      register: api_net_device_stats_filtered
      ignore_errors: true
      changed_when: false
      retries: 3
      delay: 2
      until: api_net_device_stats_filtered is succeeded
      tags:
        - c4_3

    - name: "Endpoint GET /network/devices/stats - filter by management IP"
      debug:
        msg: "{{ api_net_device_stats_filtered.content | from_json | to_nice_json }}"
      ignore_errors: true
      tags:
        - c4_3

    - pause:
        prompt: "Please mark now aspect - Endpoint GET /network/devices/stats - filter by management IP"
      tags:
        - c4_3

    ## Endpoint PUT /customers/ - Trigger customer deployment
    - name: "Call PUT /customers/"
      ansible.builtin.uri:
        url: "https://127.0.0.1/customers/"
        method: PUT
        return_content: true
        validate_certs: False
        body_format: json
        body:
          name: "SmartCorp"
          domain_prefix: "smartcorp"
          username: "smartguy"
          password: "$mart4Life"
          message: "We will make your company smart"
        timeout: 900
        status_code: [200, 201]
      ignore_errors: true
      changed_when: false
      tags:
        - c4_4

    - name: "Wait 10secs to be sure that customer has been added."
      pause:
        seconds: 10
      tags:
        - c4_4

    - name: "Read customers.json"
      shell: "cat /etc/ansible/customers.json"
      register: customers_json
      ignore_errors: true
      changed_when: false
      tags:
        - c4_4
        - c4_4_test

    - name: "Endpoint PUT /customers/ - Trigger customer deployment"
      debug:
        msg: |-
          "{{ customers_json.stdout | from_json | to_nice_json }}"
      ignore_errors: true
      tags:
        - c4_4
        - c4_4_test

    - pause:
        prompt: "Please mark now aspect - Endpoint PUT /customers/ - Trigger customer deployment."
      tags:
        - c4_4
        - c4_4_test

    #  Endpoint PUT /customers/ - Ansible playbook started
    - name: "Check background jobs"
      shell: "ps aux | grep ansible-playbook"
      register: ps_ansible_playbook
      ignore_errors: true
      changed_when: false
      tags:
        - c4_5

    - name: "Endpoint PUT /customers/ - Ansible playbook started"
      debug:
        msg: |-
          "{{ ps_ansible_playbook.stdout }}"
      tags:
        - c4_5

    - name: "Waiting max. 20mins until customer deployment has finished"
      shell: "ps aux | grep 6-customers.yml | grep -v grep || true"
      register: search_customer_deployment
      ignore_errors: true
      changed_when: false
      delay: 30
      retries: 40
      until: "search_customer_deployment.stdout|length == 0"
      tags:
        - c4_5

    - pause:
        prompt: "Please mark now aspect - Endpoint PUT /customers/ - Trigger customer deployment."
      tags:
        - c4_5

    ## Endpoint PUT /customers/ - DNS records and OU exists
    - name: "Execute Get-ADOrganizationalUnit on WIN1"
      win_shell: "Get-ADOrganizationalUnit -Filter 'Name -eq \"SmartCorp\"'"
      register: customers_ad
      delegate_to: WIN1
      ignore_errors: true
      changed_when: false
      tags:
        - c4_6

    - name: "Execute dig on smartcorp.customers.com domain"
      shell: "dig @{{ hostvars[groups.dc|first]['ansible_host'] }} smartcorp.customers.com +noall +answer +timeout=2 +tries=1"
      register: customers_dig
      ignore_errors: true
      changed_when: false
      tags:
        - c4_6

    - name: "Endpoint PUT /customers/ - DNS records and OU exists"
      debug:
        msg: |-
          ==> OU: {{ customers_ad.stdout }}
          ==> DNS:
          {{ customers_dig.stdout }}
      tags:
        - c4_6

    - pause:
        prompt: "Please mark now aspect - Endpoint PUT /customers/ - DNS records and OU exists"
      tags:
        - c4_6


    ## Endpoint PUT /customers/ - Website
    - name: "Call http://smartcorp.customers.com on WIN1"
      win_shell: "Invoke-WebRequest http://smartcorp.customers.com -UseBasicParsing"
      register: customers_web
      delegate_to: WIN1
      ignore_errors: true
      changed_when: false
      tags:
        - c4_7

    - name: "Endpoint PUT /customers/ - New customer onboarded"
      debug:
        msg: |-
          {{ customers_web.stdout }}
      tags:
        - c4_7

    - pause:
        prompt: "Please mark now aspect - Endpoint PUT /customers/ - New customer onboarded"
      tags:
        - c4_7
  